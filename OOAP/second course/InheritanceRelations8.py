"""
 Задание 16.

Приведите два словесных примера отношения "содержит" между классами, которое похоже на "является",
но по вышеупомянутому правилу таковым не является.
"""

# На мой взгляд, сюда подойдут стандартные примеры с курсов, объясняющие понятие "класс".
# Столкнулся с этим, когда начал прописывать игру.
# Пример 1. Класс "волшебник" - наследник класса "человек" или класса "герой"
# Чаще всего волшебника отличает наличие маны и умение использовать заклинания.
# Если мы выделим "магические умения" в отдельную систему классов-типов и будем использовать композицию с классом
# "герой", то легко сможем получить персонажей-волшебников, а плюсом легче создавать артефакты, и монстров.
# Наделяя их с помощью той же композиции атрибутом, содержащим класс "магические умения".

# Пример 2. класс "ядовитый клинок", "огненный клинок" - разные наследники класса "клинок"
# Оба этих оружия накладывают статус на урон ('яд', 'огонь') и возможно на цель ('отравлен', 'обожжен').
# Возможно стоит выделить отдельную иерархию классов-статусов, которые оружие будет "содержать".
# Тогда "ядовитый клинок" и "огненный клинок" превратятся в "клинок со статусом", содержащий объект класса "ядовитый"
# или класса "огненный".


"""
 Задание 17.

Приведите два словесных примера отношения "является" между классами, которое однозначно таковым является и
не может быть переведено в отношение "содержит".
"""

# Продолжая игровую тематику.
# Пример 1. Предположим, что у нас в текстовой игре есть подземелье со случайно генерируемыми комнатами.
# Комната - класс, объект которого принимает объект героя. Есть несколько наследников, принципиально
# отличающихся по логике взаимодействия с героем - "сценарная комната" и "боевая комната". Внутри "боевых" комнат мы
# можем изменять логику боя с помощью композиции "монстров". Внутри "сценарных" задаем игроку текстовые головоломки,
# которые тоже можем изменять с помощью композиции "сценариев".

# Пример 2. класс "оружие со статусом" - наследник класса "оружие"
# У нас есть базовый метод "атака", который принимает цель отнимает предположим отнимает её хитпоинты. В
# наследнике класса "оружие со статусом", мы расширяем взаимодействие с целью. Теперь вовремя атаки проверяется иммунитет к
# предполагаемому статусу и если его нет - применяется эффект статуса. Статус может быть яд, огонь, понижение брони.
# Это уже решается с помощью композиции. Как альтернатива мы можем в классе оружие сразу прописать добавление статуса
# "без статуса", но это выглядит непрозрачным и нелогичным.
