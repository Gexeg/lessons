    - Hero
        - структура данных содержащая информацию о герое (имя, хитпоинты, текущие теги, возможно предметы в рюкзаке)
    
    - MoveEcho
        - изменяет героя в соответствии с настройками
        - возвращает описание причин изменений
    
    - Scene
        - сцена. Генерирует список возможных ходов в зависимости от состояния вошедшего героя
        - наличие тегов или предметов может открывать дополнительные действия
        - принимает героя, выбранный ход игрока
        - применяет MoveEcho на Hero в соответствии с выбранным решением и возвращает описание результата
    
    - Room
        - содержит последовательность сцен.
        - принимает героя, выбранный ход игрока и передает в текущую сцену
        - возвращает описание результата

    - RoomsStorage
        - содержит комнаты, использующиеся в игре
        - определяет логику для выдачи следующей комнаты, когда текущая пройдена

    - Scenario
        - принимает выбранный ход игрока, передает его и героя в текущую комнату
        - возвращает описание результата
        - получает следующие комнаты из RoomsStorage
        - содержит системные ходы не зависящие от комнат, но зависящие от сценария (посмотреть в рюкзак, устроить привал)
        - отслеживает триггеры вызывающие смену и инициацию концовок игры (кончились хп, кончились комнаты, сделано слишком много ходов и т.д.)
    
    - Backend
        - создает экземпляр сценария, когда получает запрос от нового игрока с фронта
        - передает решения игроков в тот сценарий, который они сейчас проходят
        - возвращает на фронт результаты ходов
        - позволяет перезапустить сценарий (и в идеале выбрать один из представленных)

    - Frontend
        - принимает от пользователя команды, различает пользователей по идентификаторам (для тестирования в консоли этот функционал не нужен, в телеграм ботах реализован на стороне телеграма)
        - передает их на Backend
        - передает пользователю ответы Backend
